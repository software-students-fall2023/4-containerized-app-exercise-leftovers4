name: CI, Back End Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y portaudio19-dev ffmpeg
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv lock
          pipenv sync --dev --python $(which python)
          pipenv shell --fancy --python $(which python)
          pipenv install python-dotenv
          pipenv install pytest-cov

      - name: Run tests with pytest
        env:
          PYTHONPATH: ${{ github.workspace }}/machine-learning-client
        run: |
          cd machine-learning-client
          pipenv run pytest --cov=./ tests/ --cov-report=xml
          pipenv run python -m coverage run -m pytest
          pipenv run python -m coverage report

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./machine-learning-client/coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}